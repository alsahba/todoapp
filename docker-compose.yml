version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  app:
    build:
      context: todoapp
      dockerfile: Dockerfile
    expose:
      - 8080
    ports:
      - "8080:8080"
    container_name: app
    depends_on:
      - db
      - kafka
    environment:
      - DB_HOST=db
      - KAFKA_HOST=kafka

  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    environment:
      - POSTGRES_USER=todoapp
      - POSTGRES_PASSWORD=todoapp
      - POSTGRES_DB=todoapp

  todoapp-es:
    image: elasticsearch:${STACK_VERSION}
    container_name: todoapp-es
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
  todoapp-kibana:
    image: kibana:${STACK_VERSION}
    container_name: todoapp-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://todoapp-es:9200
  todoapp-logstash:
    build:
      context: logstash
      dockerfile: Dockerfile
    container_name: todoapp-logstash
    ports:
      - "5000:5000"
      - "5044:5044"
      - "9600:9600"
    environment:
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://todoapp-es:9200
      - XPACK_MONITORING_ENABLED=true